package gw2flipper;

import java.awt.Color;
import java.awt.GradientPaint;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.text.ParseException;
import java.util.logging.Level;
import java.util.logging.Logger;

/* MainPanel
 * -----------------------------------------------------------------------------
 * The main panel used to display all results and fields.
 * -----------------------------------------------------------------------------
 * Notes:       None
 * -----------------------------------------------------------------------------
 * TODO:        None
 * -----------------------------------------------------------------------------
 * Author:      Jonas Nilsson
 * Date:        22-04-01
 * Version:     1.0
 */
public class MainPanel extends javax.swing.JPanel {

    private final Calculator calculator = new Calculator();
    
    /* MainPanel
     * --------------------------------------------------
     * Constructor used for initialization.
     * --------------------------------------------------
     * Input:   None
     * Output:  None
     * --------------------------------------------------
     */
    public MainPanel() {
        initComponents();
        jSpinnerQuantity.setValue(1);
    }
    
    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        Graphics2D g2d = (Graphics2D) g;
        g2d.setRenderingHint(RenderingHints.KEY_RENDERING
                , RenderingHints.VALUE_RENDER_QUALITY);
        int w = getWidth();
        int h = getHeight();
        Color color1 = Color.ORANGE;
        Color color2 = Color.DARK_GRAY;
        GradientPaint gp = new GradientPaint(0, 0, color1, 0, h, color2);
        g2d.setPaint(gp);
        g2d.fillRect(0, 0, w, h);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanelResults = new javax.swing.JPanel();
        jLabelListingFee = new javax.swing.JLabel();
        jLabelListingFeeValue = new javax.swing.JLabel();
        jLabelExchangeFee = new javax.swing.JLabel();
        jLabelExchangeFeeValue = new javax.swing.JLabel();
        jLabelProfit = new javax.swing.JLabel();
        jLabelProfitValue = new javax.swing.JLabel();
        jLabelBreakEven = new javax.swing.JLabel();
        jLabelBreakEvenValue = new javax.swing.JLabel();
        jLabelBuyCost = new javax.swing.JLabel();
        jLabelBuyCostValue = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jPanelPrices = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldBuyPriceGold = new javax.swing.JTextField();
        jTextFieldSellPriceCopper = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldSellPriceGold = new javax.swing.JTextField();
        jTextFieldSellPriceSilver = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jButtonCalculateProfit = new javax.swing.JButton();
        jTextFieldBuyPriceSilver = new javax.swing.JTextField();
        jTextFieldBuyPriceCopper = new javax.swing.JTextField();
        jButtonReset = new javax.swing.JButton();
        jLabelQuantity = new javax.swing.JLabel();
        jSpinnerQuantity = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setPreferredSize(new java.awt.Dimension(490, 299));

        jPanelResults.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Results", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Consolas", 1, 14))); // NOI18N

        jLabelListingFee.setText("Listing Fee: ");

        jLabelListingFeeValue.setText("None");

        jLabelExchangeFee.setText("Exchange Fee:");

        jLabelExchangeFeeValue.setText("None");

        jLabelProfit.setText("Profit: ");

        jLabelProfitValue.setText("None");

        jLabelBreakEven.setText("Sell Break Even:");

        jLabelBreakEvenValue.setText("None");

        jLabelBuyCost.setText("Buy Cost:");

        jLabelBuyCostValue.setText("None");

        javax.swing.GroupLayout jPanelResultsLayout = new javax.swing.GroupLayout(jPanelResults);
        jPanelResults.setLayout(jPanelResultsLayout);
        jPanelResultsLayout.setHorizontalGroup(
            jPanelResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelResultsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jSeparator2)
                    .addComponent(jLabelBreakEven, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelListingFee, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelExchangeFee, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelProfit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelBuyCost, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelProfitValue, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE)
                    .addComponent(jLabelExchangeFeeValue, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelListingFeeValue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelBreakEvenValue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelBuyCostValue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanelResultsLayout.setVerticalGroup(
            jPanelResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelResultsLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelBuyCost)
                    .addComponent(jLabelBuyCostValue))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelListingFee)
                    .addComponent(jLabelListingFeeValue))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelExchangeFee)
                    .addComponent(jLabelExchangeFeeValue))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelBreakEven)
                    .addComponent(jLabelBreakEvenValue))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelProfit)
                    .addComponent(jLabelProfitValue))
                .addGap(48, 48, 48))
        );

        jPanelPrices.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Prices", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Consolas", 1, 14))); // NOI18N
        jPanelPrices.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel1.setText("Buy Price (gold / silver / copper)");

        jLabel2.setText("Sell Price (gold / silver / copper)");

        jButtonCalculateProfit.setText("Calculate Profit");
        jButtonCalculateProfit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCalculateProfitActionPerformed(evt);
            }
        });

        jButtonReset.setText("Reset");
        jButtonReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonResetActionPerformed(evt);
            }
        });

        jLabelQuantity.setText("Quantity");

        javax.swing.GroupLayout jPanelPricesLayout = new javax.swing.GroupLayout(jPanelPrices);
        jPanelPrices.setLayout(jPanelPricesLayout);
        jPanelPricesLayout.setHorizontalGroup(
            jPanelPricesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPricesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelPricesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelQuantity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator1)
                    .addGroup(jPanelPricesLayout.createSequentialGroup()
                        .addComponent(jButtonCalculateProfit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonReset))
                    .addGroup(jPanelPricesLayout.createSequentialGroup()
                        .addGroup(jPanelPricesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelPricesLayout.createSequentialGroup()
                                .addComponent(jTextFieldBuyPriceGold, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldBuyPriceSilver, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldBuyPriceCopper, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelPricesLayout.createSequentialGroup()
                                .addComponent(jTextFieldSellPriceGold, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldSellPriceSilver, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldSellPriceCopper, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jSpinnerQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelPricesLayout.setVerticalGroup(
            jPanelPricesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPricesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelPricesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldBuyPriceGold, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldBuyPriceSilver, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldBuyPriceCopper, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelPricesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldSellPriceGold, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldSellPriceSilver, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldSellPriceCopper, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelQuantity)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSpinnerQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 117, Short.MAX_VALUE)
                .addGroup(jPanelPricesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCalculateProfit)
                    .addComponent(jButtonReset))
                .addGap(18, 18, 18))
        );

        jSpinnerQuantity.getAccessibleContext().setAccessibleName("");

        jLabel3.setBackground(new java.awt.Color(255, 204, 102));
        jLabel3.setFont(new java.awt.Font("Courier New", 1, 11)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText(" ");
        jLabel3.setOpaque(true);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gw2flipper/coin1.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanelPrices, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanelResults, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanelResults, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4))
                    .addComponent(jPanelPrices, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addContainerGap())
        );

        jLabel3.getAccessibleContext().setAccessibleName("");
    }// </editor-fold>//GEN-END:initComponents
    /* jButtonCalculateProfitActionPerformed
     * --------------------------------------------------
     * Calculates and updates fields when the profit
     * should be calculated
     * --------------------------------------------------
     * Input:   (evt): The click event
     * Output:  None
     * --------------------------------------------------
     */
    private void jButtonCalculateProfitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCalculateProfitActionPerformed
        try {
            // FETCH QUANTITY
            jSpinnerQuantity.commitEdit();
        } catch (ParseException ex) {
            Logger.getLogger(MainPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        int quantity = (int) jSpinnerQuantity.getValue();
        // Get the buy and sell prices set in copper
        double buyPrice = getTotalCopperFromText(
                jTextFieldBuyPriceGold.getText(),
                jTextFieldBuyPriceSilver.getText(),
                jTextFieldBuyPriceCopper.getText());
        double sellPrice = getTotalCopperFromText(
                jTextFieldSellPriceGold.getText(),
                jTextFieldSellPriceSilver.getText(),
                jTextFieldSellPriceCopper.getText());
        // Get fees and profit
        int listingFee = calculator.calculateListingFee(sellPrice) * quantity;
        int exchangeFee = calculator.calculateTradingPostCut(sellPrice * quantity);
        int profit = calculator.calculateProfit(buyPrice, sellPrice) * quantity;      
        /* Note: Methods not separated because the calculated values are 
         * needed anyway when setting label colors
         */
        // Create the buy cost string and set the label
        int newBuyCost = (int)buyPrice * quantity;
        int newBuyGold = (int) Math.floor(newBuyCost / (100*100));
        int newBuySilver = (int) Math.floor((newBuyCost - newBuyGold * 100 * 100)/100);
        int newBuyCopper = (int) newBuyCost%100;
        String buyCostString = Integer.toString(newBuyGold) + "g " 
            + Integer.toString(newBuySilver) + "s " 
            + Integer.toString(newBuyCopper) + "c";
        if(buyPrice == 0) {
            jLabelBuyCostValue.setText("None");
        } else {
            jLabelBuyCostValue.setText(buyCostString);
        }
        jLabelBuyCostValue.setForeground(Color.DARK_GRAY);
        // Create the listing string and set the label
        int listingGold = (int) Math.floor(listingFee / (100*100));
        int listingSilver = (int) Math.floor((listingFee - listingGold * 100 * 100)/100);
        int listingCopper = (int) listingFee%100;
        String listingString = Integer.toString(listingGold ) + "g " 
            + Integer.toString(listingSilver) + "s " 
            + Integer.toString(listingCopper) + "c";
        if(listingGold == 0 && listingSilver == 0 && listingCopper == 0) {
            jLabelListingFeeValue.setText("None");
            jLabelListingFeeValue.setForeground(Color.DARK_GRAY);
        } else {
            jLabelListingFeeValue.setText(listingString);
            jLabelListingFeeValue.setForeground(Color.red);
        }   
        // Create the exchange string and set the label
        int exchangeGold = (int) Math.floor(exchangeFee / (100*100));
        int exchangeSilver = (int) Math.floor((exchangeFee - exchangeGold * 100 * 100)/100);
        int exchangeCopper = (int) exchangeFee%100;
        String exchangeString = Integer.toString(exchangeGold) + "g " 
            + Integer.toString(exchangeSilver) + "s " 
            + Integer.toString(exchangeCopper) + "c";
        if(exchangeGold == 0 && exchangeSilver == 0 && exchangeCopper == 0) {
            jLabelExchangeFeeValue.setText("None");
            jLabelExchangeFeeValue.setForeground(Color.DARK_GRAY);
        } else {
            jLabelExchangeFeeValue.setText(exchangeString);
            jLabelExchangeFeeValue.setForeground(Color.red);
        }
        // Create the break even string and set the label
        int breakEvenAll = calculator.calculateBreakEven(buyPrice) * quantity;
        int breakEvenGold = (int) Math.floor(breakEvenAll / (100*100));
        int breakEvenSilver = (int) Math.floor((breakEvenAll - breakEvenGold * 100 * 100)/100);
        int breakEvenCopper = (int) breakEvenAll%100;
        String breakEvenString = Integer.toString(breakEvenGold) + "g " 
            + Integer.toString(breakEvenSilver) + "s " 
            + Integer.toString(breakEvenCopper) + "c";
        if(breakEvenAll == 0) {
            jLabelBreakEvenValue.setText("None");
            jLabelBreakEvenValue.setForeground(Color.DARK_GRAY);
        } else {
            jLabelBreakEvenValue.setText(breakEvenString);
            jLabelBreakEvenValue.setForeground(Color.ORANGE.darker());
        }
        // Create the profit string and set the label
        int profitGold = (int) Math.floor(profit / (100*100));
        int profitSilver = (int) Math.floor((profit - profitGold * 100 * 100)/100);
        int profitCopper = (int) profit%100;
        String profitString = Integer.toString(profitGold) + "g " 
            + Integer.toString(profitSilver) + "s " 
            + Integer.toString(profitCopper) + "c";
        if( profitGold < 0 || profitSilver < 0 || profitCopper < 0) {
            jLabelProfitValue.setText(profitString);
            jLabelProfitValue.setForeground(Color.red);
        } else if(profitGold == 0 && profitSilver == 0 && profitCopper == 0) {
            jLabelProfitValue.setText("None");
            jLabelProfitValue.setForeground(Color.DARK_GRAY);
        } else {
            jLabelProfitValue.setText(profitString);
            jLabelProfitValue.setForeground(Color.green.darker());
        }
    }//GEN-LAST:event_jButtonCalculateProfitActionPerformed
    
    /* getTotalCopperFromText
     * --------------------------------------------------
     * Calculates the total copper from given strings
     * in gold, silver and copper.
     * --------------------------------------------------
     * Input:   (goldText): The gold text
     *          (silverText): The silver text
     *          (copperText): The copper text
     * Output:  The total copper
     * --------------------------------------------------
     */
    private double getTotalCopperFromText(String goldText, String silverText, String copperText){
        double gold = 0, silver = 0, copper = 0;
        if(!goldText.equals("")) {
            gold = Double.parseDouble(goldText);
        }
        if(!silverText.equals("")) {
            silver = Double.parseDouble(silverText);
        }
        if(!copperText.equals("")) {
            copper = Double.parseDouble(copperText);
        }
        return (gold * 100 * 100) + (silver * 100) + copper;      
    }
    
    /* jButtonResetActionPerformed
     * --------------------------------------------------
     * Resets all fields if the reset button is pressed.
     * --------------------------------------------------
     * Input:   (evt): The click event
     * Output:  None
     * --------------------------------------------------
     */
    private void jButtonResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonResetActionPerformed
        jTextFieldBuyPriceGold.setText("");
        jTextFieldBuyPriceGold.setForeground(Color.DARK_GRAY);
        jTextFieldBuyPriceSilver.setText("");
        jTextFieldBuyPriceSilver.setForeground(Color.DARK_GRAY);
        jTextFieldBuyPriceCopper.setText("");
        jTextFieldBuyPriceCopper.setForeground(Color.DARK_GRAY);
        jTextFieldSellPriceGold.setText("");
        jTextFieldSellPriceGold.setForeground(Color.DARK_GRAY);
        jTextFieldSellPriceSilver.setText("");
        jTextFieldSellPriceSilver.setForeground(Color.DARK_GRAY);
        jTextFieldSellPriceCopper.setText("");
        jTextFieldSellPriceCopper.setForeground(Color.DARK_GRAY);
        jLabelBuyCostValue.setText("None");
        jLabelBuyCostValue.setForeground(Color.DARK_GRAY);
        jLabelListingFeeValue.setText("None");
        jLabelListingFeeValue.setForeground(Color.DARK_GRAY);
        jLabelExchangeFeeValue.setText("None");
        jLabelExchangeFeeValue.setForeground(Color.DARK_GRAY);
        jLabelBreakEvenValue.setText("None");
        jLabelBreakEvenValue.setForeground(Color.DARK_GRAY);
        jLabelProfitValue.setText("None");
        jLabelProfitValue.setForeground(Color.DARK_GRAY);  
        jSpinnerQuantity.setValue(1);  
    }//GEN-LAST:event_jButtonResetActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCalculateProfit;
    private javax.swing.JButton jButtonReset;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelBreakEven;
    private javax.swing.JLabel jLabelBreakEvenValue;
    private javax.swing.JLabel jLabelBuyCost;
    private javax.swing.JLabel jLabelBuyCostValue;
    private javax.swing.JLabel jLabelExchangeFee;
    private javax.swing.JLabel jLabelExchangeFeeValue;
    private javax.swing.JLabel jLabelListingFee;
    private javax.swing.JLabel jLabelListingFeeValue;
    private javax.swing.JLabel jLabelProfit;
    private javax.swing.JLabel jLabelProfitValue;
    private javax.swing.JLabel jLabelQuantity;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelPrices;
    private javax.swing.JPanel jPanelResults;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSpinner jSpinnerQuantity;
    private javax.swing.JTextField jTextFieldBuyPriceCopper;
    private javax.swing.JTextField jTextFieldBuyPriceGold;
    private javax.swing.JTextField jTextFieldBuyPriceSilver;
    private javax.swing.JTextField jTextFieldSellPriceCopper;
    private javax.swing.JTextField jTextFieldSellPriceGold;
    private javax.swing.JTextField jTextFieldSellPriceSilver;
    // End of variables declaration//GEN-END:variables
}
